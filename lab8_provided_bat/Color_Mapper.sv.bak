// color_mapper: Decide which color to be output to VGA for each pixel.
module  color_mapper ( input logic is_block, active,
							  input logic menu,
                       input logic [9:0] DrawX, DrawY,
                       output logic [7:0] VGA_R, VGA_G, VGA_B 
                     );
    
    logic [7:0] Red, Green, Blue;
	 
//	 logic b0, b1, b2, b3, b4, b5, b6, b7;
//	 assign b0 = (is_block[0] == 1'b1) && (active[0] == 1'b1);
//	 assign b1 = (is_block[1] == 1'b1) && (active[1] == 1'b1);
//	 assign b2 = (is_block[2] == 1'b1) && (active[2] == 1'b1);
//	 assign b3 = (is_block[3] == 1'b1) && (active[3] == 1'b1);
//	 assign b4 = (is_block[4] == 1'b1) && (active[4] == 1'b1);
//	 assign b5 = (is_block[5] == 1'b1) && (active[5] == 1'b1);
//	 assign b6 = (is_block[6] == 1'b1) && (active[6] == 1'b1);
//	 assign b7 = (is_block[7] == 1'b1) && (active[7] == 1'b1);
    
    // Output colors to VGA
    assign VGA_R = Red;
    assign VGA_G = Green;
    assign VGA_B = Blue;
	 
	 
    
    // Assign color based on is_ball signal
    always_comb
    begin
	 //(b0 | b1 | b2 | b3 | b4 | b5 | b6 | b7) == 1'b1
        if (is_block == 1'b1) 
        begin
            // White block
            Red = 8'hff;
            Green = 8'hff;
            Blue = 8'hff;
        end
        else if (menu == 1'b1)
        begin
            // Background with nice color gradient
            Red = 8'd250; 
            Green = 8'd352;
            Blue = 8'd59;
        end else begin
				Red = 8'd233;
				Green = 8'd17;
				Blue = 8'd236;
		  end
    end 
    
endmodule